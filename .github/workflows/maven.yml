# # This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# # For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# # This workflow uses actions that are not certified by GitHub.
# # They are provided by a third-party and are governed by
# # separate terms of service, privacy policy, and support
# # documentation.

# name: Java CI with Maven

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v3
#     - name: Set up JDK 11
#       uses: actions/setup-java@v3
#       with:
#         java-version: '11'
#         distribution: 'temurin'
#         cache: maven
#     - name: Build with Maven
#       run: mvn -B package --file pom.xml
#     - name: Build Jar file
#       run: mkdir staging && cp target/*.jar staging  # Đưa file jar vào artifact Github
#     - uses: actions/upload-artifact@v4
#       with:
#         name: Package
#         path: staging

#     # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
#     - name: Update dependency graph
#       uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

name: CI for Spring Boot and MySQL (Docker Compose)

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Maven cache
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('pom.xml') }}

      # - name: Start Docker Compose
      #   run: docker-compose up -d

      - name: Install dependencies
        run: mvn install

      - name: Run unit tests
        run: mvn test

      - name: Run integration tests
        run: mvn verify -Pintegration-test

      # - name: Stop Docker Compose
      #   run: docker-compose down